package io.github.tetherlessworld.twxplore.lib.base.models.domain

import java.util.Date

import edu.rpi.tw.twks.uri.Uri
import io.github.tetherlessworld.twxplore.lib.base.models.domain.vocabulary.TREE

trait TreeTermsProperties extends PropertyGetters with PropertySetters {
  final def createdAt = getPropertyObjectDate(TREE.createdAt)
  final def dbh = getPropertyObjectInt(TREE.dbh)
  final def stump = getPropertyObjectInt(TREE.stump)
  final def block = getPropertyObjectResourceIdentifier(TREE.block)
  final def blockUri = getPropertyObjectUri(TREE.block)
  final def blocksUri = getPropertyObjectUris(TREE.block)
  final def curbLoc = getPropertyObjectString(TREE.curbLoc)
  final def status = getPropertyObjectString(TREE.status)
  final def health = getPropertyObjectString(TREE.health)
  final def species = getPropertyObjectString(TREE.species)
  final def steward = getPropertyObjectString(TREE.steward)
  final def guards = getPropertyObjectString(TREE.guards)
  final def sidewalk = getPropertyObjectString(TREE.sidewalk)
  final def userType = getPropertyObjectString(TREE.userType)
  final def problems = getPropertyObjectStrings(TREE.problems)
  final def problem = getPropertyObjectString(TREE.problems)
  final def common = getPropertyObjectString(TREE.common)
  final def latin = getPropertyObjectString(TREE.latin)
  final def zipCity = getPropertyObjectResourceLabel(TREE.zipCity)
  final def community = getPropertyObjectInt(TREE.community)
  final def borough = getPropertyObjectResourceLabel(TREE.borough)
  final def boroughs = getPropertyObjectStrings(TREE.borough)
  final def boroughUri = getPropertyObjectUri(TREE.borough)
  final def boroughsUri = getPropertyObjectUris(TREE.borough)
  final def cncldist = getPropertyObjectInt(TREE.cncldist)
  final def stateAssembly = getPropertyObjectInt(TREE.stateAssembly)
  final def stateSenate = getPropertyObjectInt(TREE.stateSenate)
  final def NTA = getPropertyObjectResourceLabel(TREE.NTA)
  final def NTAUri = getPropertyObjectUri(TREE.NTA)
  final def NTAUris = getPropertyObjectUris(TREE.NTA)
  final def boroughCount = getPropertyObjectInt(TREE.boroughCount)
  final def x_sp = getPropertyObjectFloat(TREE.x_sp)
  final def y_sp = getPropertyObjectFloat(TREE.y_sp)
  final def censusTract = getPropertyObjectResourceIdentifier(TREE.censusTract)
  final def bin = getPropertyObjectInt(TREE.bin)
  final def bbl = getPropertyObjectLong(TREE.bbl)

  //Setters
  final def boroughUri_=(uri: Uri) = addPropertyUri(TREE.borough, uri)
  final def boroughsUri_=(uris: List[Uri]) = addPropertyUris(TREE.borough, uris)
  final def blocksUri_=(uris: List[Uri]) = addPropertyUris(TREE.block, uris)
  final def blockUri_=(uri: Uri) = this.blocksUri = List(uri)
  final def createdAt_=(value: Date) = addPropertyLiteral(TREE.createdAt, value)
  final def dbh_=(value: Int) = addPropertyLiteral(TREE.dbh, value)
  final def stump_=(value: Int) = addPropertyLiteral(TREE.stump, value)
  final def curbLoc_=(value: String) = addPropertyLiteral(TREE.curbLoc, value)
  final def status_=(value: String) = addPropertyLiteral(TREE.status, value)
  final def health_=(value: String) = addPropertyLiteral(TREE.health, value)
  final def steward_=(value: String) = addPropertyLiteral(TREE.steward, value)
  final def guards_=(value: String) = addPropertyLiteral(TREE.guards, value)
  final def sidewalk_=(value: String) = addPropertyLiteral(TREE.sidewalk, value)
  final def userType_=(value: String) = addPropertyLiteral(TREE.userType, value)
  final def problems_=(values: List[String]) =  addPropertyLiterals(TREE.problems, values)
  final def community_=(value: Int) = addPropertyLiteral(TREE.community, value)
  final def cncldist_=(value: Int) = addPropertyLiteral(TREE.cncldist, value)
  final def stateAssembly_=(value: Int) = addPropertyLiteral(TREE.stateAssembly, value)
  final def stateSenate_=(value: Int) = addPropertyLiteral(TREE.stateSenate, value)
  final def boroughCount_=(value: Int) = addPropertyLiteral(TREE.boroughCount, value)
  final def x_sp_=(value: Float) = addPropertyLiteral(TREE.x_sp, value)
  final def y_sp_=(value: Float) = addPropertyLiteral(TREE.y_sp, value)
  final def bin_=(value: Int) = addPropertyLiteral(TREE.bin, value)
  final def bbl_=(value: Long) = addPropertyLiteral(TREE.bbl, value)
  final def NTAUris_=(uris: List[Uri]) = addPropertyUris(TREE.NTA, uris)
  final def NTAUri_=(uri: Uri) = this.NTAUris = List(uri)
  final def common_=(value: String) = addPropertyLiteral(TREE.common, value)
  final def latin_=(value: String) = addPropertyLiteral(TREE.latin, value)

}
